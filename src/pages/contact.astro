---
import Layout from "../layouts/Layout.astro";
import { isEmailValid } from "@hapi/address";
import nodemailer from "nodemailer";

// Read the package parameter from the URL
const selectedPackage = Astro.url.searchParams.get("package");

// Set initial message based on the package parameter
let initialMessage = "";
if (selectedPackage) {
  initialMessage = `Hi, I'm interested in the ${selectedPackage} package. Please provide more details or let me know how to book.`;
}

const errors = {
  name: "",
  email: "",
  message: "",
};

let success = false;

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const name = data.get("name")?.toString();
    const email = data.get("email")?.toString();
    const message = data.get("message")?.toString();

    if (!name) {
      errors.name = "Name is required";
      throw new Error("Name is required");
    } else if (!email) {
      errors.email = "Email is required";
      throw new Error("Email is required");
    } else if (!message) {
      errors.message = "Message is required";
      throw new Error("Message is required");
    } else if (!isEmailValid(email)) {
      errors.email = "Invalid email address";
      throw new Error("Invalid email address");
    }

    const transporter = nodemailer.createTransport({
      host: import.meta.env.SMTP_HOST,
      port: import.meta.env.SMTP_PORT,
      auth: {
        user: import.meta.env.SMTP_USER,
        pass: import.meta.env.SMTP_PASS,
      },
    });

    try {
      transporter.sendMail({
        from: email,
        to: import.meta.env.CONTACT_DESTINATION_EMAIL,
        subject: `New message from ${name} <${email}>`,
        text: message,
      });
    } catch (error) {
      console.error(error);
      errors.message = "Failed to send email";
      throw new Error("Failed to send email");
    }

    success = true;
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<Layout page_title="Contact">
  <main>
    <h1>Get in Touch</h1>
    <p class="intro">Ready to capture your moments? Contact me to discuss your photography needs or book a session in the DFW area. Fill out the form below, email, or call!</p>
    <section>
      <h2>Send a Message</h2>
      <form method="POST">
        <div class="info">
          <div class="info-item">
            <label for="name">Name</label>
            <input
              type="text"
              id="name"
              name="name"
              placeholder="John Doe"
              required
            />
            {errors.name && <p class="error">{errors.name}</p>}
          </div>
          <div class="info-item">
            <label for="email">Email</label>
            <input
              type="email"
              id="email"
              name="email"
              placeholder="john@example.com"
              required
            />
            {errors.email && <p class="error">{errors.email}</p>}
          </div>
        </div>
        <div>
          <label for="message">Message</label>
          <textarea
            id="message"
            name="message"
            placeholder="Your message here"
            required
          >{initialMessage}</textarea>
          {errors.message && <p class="error">{errors.message}</p>}
        </div>
        {success && <p id="message-sent">Message sent!</p>}
        <button type="submit">Send</button>
      </form>
    </section>
    <section>
      <h2>Contact Information</h2>
      <p>
        Serving the Dallas-Fort Worth metroplex and surrounding areas.
      </p>
      <p>
        <strong>Email:</strong> <a href="mailto:alec@alecj.tk">alec@alecj.tk</a>
      </p>
      <p>
        <strong>Phone:</strong> <a href="tel:8173309645">(817) 330-9645</a>
      </p>
      <p>
        <strong>Instagram:</strong> <a
          href="https://www.instagram.com/alec.j.photography/"
          target="_blank">@alec.j.photography</a
        >
      </p>
    </section>
  </main>
</Layout>

<style>
  main {
    padding: var(--space-md);
    margin: 0 auto;
    max-width: 768px;
  }

  h1 {
    font-size: 2em;
    margin-bottom: var(--space-md);
  }

  p {
    margin-bottom: var(--space-md);
  }

  section {
    margin-bottom: var(--space-xl);
  }

  h2 {
    font-size: 1.5em;
    margin-bottom: var(--space-sm);
  }

  form {
    display: flex;
    flex-direction: column;
    gap: var(--space-md);
  }

  label {
    font-weight: bold;
    margin-bottom: var(--space-sm);
  }

  input,
  textarea {
    padding: var(--space-sm);
    border: 1px solid rgba(var(--gray-light), 1);
    font-size: 1em;
    width: 100%;
    box-sizing: border-box;
    font-family: "Newsreader", sans-serif;
  }

  .info {
    display: flex;
    gap: var(--space-md);
    width: 100%;
  }

  .info-item {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  #message {
    height: 10em;
    width: 100%;
  }

  button {
    padding: var(--space-sm) var(--space-lg);
    background-color: var(--primary);
    color: white;
    border: none;
    font-size: 1em;
    cursor: pointer;
    transition: background-color var(--transition-normal);
  }

  button:hover {
    background-color: var(--secondary);
  }

  .error {
    color: var(--error);
    font-size: 0.8em;
  }

  #message-sent {
    margin: calc(-1 * var(--space-sm)) 0;
  }

  .intro {
    font-size: 1.2em;
    margin-bottom: var(--space-xl);
    color: var(--text);
  }

  section h2 {
    font-size: 1.5em;
    margin-bottom: var(--space-sm);
  }

  section p strong {
    font-weight: bold;
  }

  @media (max-width: 720px) {
    .info {
      flex-direction: column;
    }

    .info-item {
      flex: unset;
    }

    button {
      width: unset;
    }
  }
</style>
